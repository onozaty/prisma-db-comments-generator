// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`basic > comments-latest.json 1`] = `
"{
  "customers": {
    "table": {
      "tableName": "customers",
      "comment": "Customer"
    },
    "columns": [
      {
        "tableName": "customers",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "customers",
        "columnName": "name",
        "comment": "Customer Name"
      },
      {
        "tableName": "customers",
        "columnName": "email",
        "comment": "e-mail"
      },
      {
        "tableName": "customers",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "products": {
    "table": {
      "tableName": "products",
      "comment": "Product"
    },
    "columns": [
      {
        "tableName": "products",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "products",
        "columnName": "name",
        "comment": "Product Name"
      },
      {
        "tableName": "products",
        "columnName": "type",
        "comment": "Product Type\\nenum: enum_product_type(BOOK, TOY, FASHION)"
      },
      {
        "tableName": "products",
        "columnName": "description",
        "comment": "Product Description"
      },
      {
        "tableName": "products",
        "columnName": "price",
        "comment": "Price"
      },
      {
        "tableName": "products",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "sales": {
    "table": {
      "tableName": "sales",
      "comment": ""
    },
    "columns": [
      {
        "tableName": "sales",
        "columnName": "sale_id",
        "comment": "Sale ID"
      },
      {
        "tableName": "sales",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "sales",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "sales",
        "columnName": "quantity",
        "comment": "Quantity"
      },
      {
        "tableName": "sales",
        "columnName": "total_price",
        "comment": "Total Price"
      },
      {
        "tableName": "sales",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  }
}"
`;

exports[`basic > migration.sql 1`] = `
"
-- customers comments
COMMENT ON TABLE "customers" IS 'Customer';
COMMENT ON COLUMN "customers"."customer_id" IS 'Customer ID';
COMMENT ON COLUMN "customers"."name" IS 'Customer Name';
COMMENT ON COLUMN "customers"."email" IS 'e-mail';

-- products comments
COMMENT ON TABLE "products" IS 'Product';
COMMENT ON COLUMN "products"."product_id" IS 'Product ID';
COMMENT ON COLUMN "products"."name" IS 'Product Name';
COMMENT ON COLUMN "products"."type" IS E'Product Type\\nenum: enum_product_type(BOOK, TOY, FASHION)';
COMMENT ON COLUMN "products"."description" IS 'Product Description';
COMMENT ON COLUMN "products"."price" IS 'Price';

-- sales comments
COMMENT ON COLUMN "sales"."sale_id" IS 'Sale ID';
COMMENT ON COLUMN "sales"."customer_id" IS 'Customer ID';
COMMENT ON COLUMN "sales"."product_id" IS 'Product ID';
COMMENT ON COLUMN "sales"."quantity" IS 'Quantity';
COMMENT ON COLUMN "sales"."total_price" IS 'Total Price';
"
`;

exports[`diff > comments-latest.json 1`] = `
"{
  "products": {
    "table": {
      "tableName": "products",
      "comment": ""
    },
    "columns": [
      {
        "tableName": "products",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "products",
        "columnName": "name",
        "comment": "Product Name"
      },
      {
        "tableName": "products",
        "columnName": "type",
        "comment": "Product Type\\nenum: enum_product_type(BOOK, TOY, FASHION)"
      },
      {
        "tableName": "products",
        "columnName": "description",
        "comment": "Product Description"
      },
      {
        "tableName": "products",
        "columnName": "price",
        "comment": "Price"
      },
      {
        "tableName": "products",
        "columnName": "created_at",
        "comment": ""
      },
      {
        "tableName": "products",
        "columnName": "shopShopId",
        "comment": ""
      }
    ]
  },
  "sales": {
    "table": {
      "tableName": "sales",
      "comment": "Sale"
    },
    "columns": [
      {
        "tableName": "sales",
        "columnName": "sale_id",
        "comment": "Sale ID"
      },
      {
        "tableName": "sales",
        "columnName": "product_id",
        "comment": ""
      },
      {
        "tableName": "sales",
        "columnName": "quantity",
        "comment": "Quantity"
      },
      {
        "tableName": "sales",
        "columnName": "total_price",
        "comment": "Total Price X"
      },
      {
        "tableName": "sales",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "shops": {
    "table": {
      "tableName": "shops",
      "comment": "Shop"
    },
    "columns": [
      {
        "tableName": "shops",
        "columnName": "shop_id",
        "comment": "Shop ID"
      },
      {
        "tableName": "shops",
        "columnName": "name",
        "comment": "Shop Name"
      },
      {
        "tableName": "shops",
        "columnName": "created_at",
        "comment": "Created At"
      }
    ]
  }
}"
`;

exports[`diff > migration.sql 1`] = `
"
-- products comments
COMMENT ON TABLE "products" IS NULL;

-- sales comments
COMMENT ON TABLE "sales" IS 'Sale';
COMMENT ON COLUMN "sales"."product_id" IS NULL;
COMMENT ON COLUMN "sales"."total_price" IS 'Total Price X';

-- shops comments
COMMENT ON TABLE "shops" IS 'Shop';
COMMENT ON COLUMN "shops"."shop_id" IS 'Shop ID';
COMMENT ON COLUMN "shops"."name" IS 'Shop Name';
COMMENT ON COLUMN "shops"."created_at" IS 'Created At';
"
`;

exports[`multi-schema > comments-latest.json 1`] = `
"{
  "foo.registered_user": {
    "table": {
      "schema": "foo",
      "tableName": "registered_user",
      "comment": "A registered user"
    },
    "columns": [
      {
        "schema": "foo",
        "tableName": "registered_user",
        "columnName": "id",
        "comment": "Primary key"
      },
      {
        "schema": "foo",
        "tableName": "registered_user",
        "columnName": "username",
        "comment": "Username used to login"
      },
      {
        "schema": "foo",
        "tableName": "registered_user",
        "columnName": "firstname",
        "comment": "User's firstname"
      },
      {
        "schema": "foo",
        "tableName": "registered_user",
        "columnName": "lastname",
        "comment": "User's lastname"
      },
      {
        "schema": "foo",
        "tableName": "registered_user",
        "columnName": "email",
        "comment": "Email address"
      }
    ]
  }
}"
`;

exports[`multi-schema > migration.sql 1`] = `
"
-- foo.registered_user comments
COMMENT ON TABLE "foo"."registered_user" IS 'A registered user';
COMMENT ON COLUMN "foo"."registered_user"."id" IS 'Primary key';
COMMENT ON COLUMN "foo"."registered_user"."username" IS 'Username used to login';
COMMENT ON COLUMN "foo"."registered_user"."firstname" IS 'User''s firstname';
COMMENT ON COLUMN "foo"."registered_user"."lastname" IS 'User''s lastname';
COMMENT ON COLUMN "foo"."registered_user"."email" IS 'Email address';
"
`;

exports[`mysql > comments-latest.json 1`] = `
"{
  "customers": {
    "table": {
      "tableName": "customers",
      "comment": "Customer"
    },
    "columns": [
      {
        "tableName": "customers",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "customers",
        "columnName": "name",
        "comment": "Customer Name"
      },
      {
        "tableName": "customers",
        "columnName": "email",
        "comment": "e-mail"
      },
      {
        "tableName": "customers",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "products": {
    "table": {
      "tableName": "products",
      "comment": "Product's"
    },
    "columns": [
      {
        "tableName": "products",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "products",
        "columnName": "name",
        "comment": "Product Name"
      },
      {
        "tableName": "products",
        "columnName": "type",
        "comment": "Product Type\\nenum: enum_product_type(BOOK, TOY, FASHION)"
      },
      {
        "tableName": "products",
        "columnName": "description",
        "comment": "Product Description"
      },
      {
        "tableName": "products",
        "columnName": "price",
        "comment": "Price"
      },
      {
        "tableName": "products",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "sales": {
    "table": {
      "tableName": "sales",
      "comment": ""
    },
    "columns": [
      {
        "tableName": "sales",
        "columnName": "sale_id",
        "comment": "Sale ID"
      },
      {
        "tableName": "sales",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "sales",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "sales",
        "columnName": "quantity",
        "comment": "Quantity"
      },
      {
        "tableName": "sales",
        "columnName": "total_price",
        "comment": "Total Price"
      },
      {
        "tableName": "sales",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  }
}"
`;

exports[`mysql > migration.sql 1`] = `
"
-- Stored procedure to update column comments
DROP PROCEDURE IF EXISTS prisma_update_column_comment;

CREATE PROCEDURE prisma_update_column_comment(
    IN p_table_name VARCHAR(255),
    IN p_column_name VARCHAR(255),
    IN p_comment_text TEXT
)
BEGIN
    DECLARE column_definition TEXT;
    
    -- Get current column definition from current database
    SELECT CONCAT(
        COLUMN_TYPE,
        CASE WHEN IS_NULLABLE = 'NO' THEN ' NOT NULL' ELSE ' NULL' END,
        CASE WHEN COLUMN_DEFAULT IS NOT NULL THEN CONCAT(' DEFAULT ', QUOTE(COLUMN_DEFAULT)) ELSE '' END,
        CASE WHEN EXTRA != '' THEN CONCAT(' ', EXTRA) ELSE '' END
    ) INTO column_definition
    FROM information_schema.COLUMNS
    WHERE TABLE_SCHEMA = DATABASE()
        AND TABLE_NAME = p_table_name
        AND COLUMN_NAME = p_column_name;
    
    -- Build and execute ALTER statement
    SET @sql = CONCAT(
        'ALTER TABLE \`', p_table_name, '\`',
        ' MODIFY COLUMN \`', p_column_name, '\` ',
        column_definition,
        CASE 
            WHEN p_comment_text IS NULL THEN ''
            ELSE CONCAT(' COMMENT ', QUOTE(p_comment_text))
        END
    );
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
END;

-- customers comments
ALTER TABLE \`customers\` COMMENT = 'Customer';
CALL prisma_update_column_comment('customers', 'customer_id', 'Customer ID');
CALL prisma_update_column_comment('customers', 'name', 'Customer Name');
CALL prisma_update_column_comment('customers', 'email', 'e-mail');

-- products comments
ALTER TABLE \`products\` COMMENT = 'Product''s';
CALL prisma_update_column_comment('products', 'product_id', 'Product ID');
CALL prisma_update_column_comment('products', 'name', 'Product Name');
CALL prisma_update_column_comment('products', 'type', 'Product Type\\nenum: enum_product_type(BOOK, TOY, FASHION)');
CALL prisma_update_column_comment('products', 'description', 'Product Description');
CALL prisma_update_column_comment('products', 'price', 'Price');

-- sales comments
CALL prisma_update_column_comment('sales', 'sale_id', 'Sale ID');
CALL prisma_update_column_comment('sales', 'customer_id', 'Customer ID');
CALL prisma_update_column_comment('sales', 'product_id', 'Product ID');
CALL prisma_update_column_comment('sales', 'quantity', 'Quantity');
CALL prisma_update_column_comment('sales', 'total_price', 'Total Price');

-- Drop stored procedure to update column comments
DROP PROCEDURE IF EXISTS prisma_update_column_comment;
"
`;

exports[`target-column > comments-latest.json 1`] = `
"{
  "customers": {
    "columns": [
      {
        "tableName": "customers",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "customers",
        "columnName": "name",
        "comment": "Customer Name"
      },
      {
        "tableName": "customers",
        "columnName": "email",
        "comment": "e-mail"
      },
      {
        "tableName": "customers",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "products": {
    "columns": [
      {
        "tableName": "products",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "products",
        "columnName": "name",
        "comment": "Product Name"
      },
      {
        "tableName": "products",
        "columnName": "type",
        "comment": "Product Type"
      },
      {
        "tableName": "products",
        "columnName": "description",
        "comment": "Product Description"
      },
      {
        "tableName": "products",
        "columnName": "price",
        "comment": "Price"
      },
      {
        "tableName": "products",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  },
  "sales": {
    "columns": [
      {
        "tableName": "sales",
        "columnName": "sale_id",
        "comment": "Sale ID"
      },
      {
        "tableName": "sales",
        "columnName": "customer_id",
        "comment": "Customer ID"
      },
      {
        "tableName": "sales",
        "columnName": "product_id",
        "comment": "Product ID"
      },
      {
        "tableName": "sales",
        "columnName": "quantity",
        "comment": "Quantity"
      },
      {
        "tableName": "sales",
        "columnName": "total_price",
        "comment": "Total Price"
      },
      {
        "tableName": "sales",
        "columnName": "created_at",
        "comment": ""
      }
    ]
  }
}"
`;

exports[`target-column > migration.sql 1`] = `
"
-- customers comments
COMMENT ON COLUMN "customers"."customer_id" IS 'Customer ID';
COMMENT ON COLUMN "customers"."name" IS 'Customer Name';
COMMENT ON COLUMN "customers"."email" IS 'e-mail';

-- products comments
COMMENT ON COLUMN "products"."product_id" IS 'Product ID';
COMMENT ON COLUMN "products"."name" IS 'Product Name';
COMMENT ON COLUMN "products"."type" IS 'Product Type';
COMMENT ON COLUMN "products"."description" IS 'Product Description';
COMMENT ON COLUMN "products"."price" IS 'Price';

-- sales comments
COMMENT ON COLUMN "sales"."sale_id" IS 'Sale ID';
COMMENT ON COLUMN "sales"."customer_id" IS 'Customer ID';
COMMENT ON COLUMN "sales"."product_id" IS 'Product ID';
COMMENT ON COLUMN "sales"."quantity" IS 'Quantity';
COMMENT ON COLUMN "sales"."total_price" IS 'Total Price';
"
`;

exports[`target-table > comments-latest.json 1`] = `
"{
  "customers": {
    "table": {
      "tableName": "customers",
      "comment": "Customer"
    }
  },
  "products": {
    "table": {
      "tableName": "products",
      "comment": "Product"
    }
  },
  "sales": {
    "table": {
      "tableName": "sales",
      "comment": ""
    }
  }
}"
`;

exports[`target-table > migration.sql 1`] = `
"
-- customers comments
COMMENT ON TABLE "customers" IS 'Customer';

-- products comments
COMMENT ON TABLE "products" IS 'Product';
"
`;
